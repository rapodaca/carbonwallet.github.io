/**
 * Test vectors taken from:
 * https://tools.ietf.org/html/draft-josefsson-rc4-test-vectors-00#page-4
 */
describe("#getSECCurveByName", function() {
  var prng;
  beforeEach(function() {
    prng = new Arcfour();
  });
  it("returns the first 16 bytes given a 40-bit key", function() {
    prng.init([0x01, 0x02, 0x03, 0x04, 0x05]);

    var out = [ ];

    for (var i = 0; i < 32; i++) {
      out.push(prng.next());
    }

    expect(out).toEqual([
      0xb2, 0x39, 0x63, 0x05, 0xf0, 0x3d, 0xc0, 0x27,
      0xcc, 0xc3, 0x52, 0x4a, 0x0a, 0x11, 0x18, 0xa8,
      0x69, 0x82, 0x94, 0x4f, 0x18, 0xfc, 0x82, 0xd5,
      0x89, 0xc4, 0x03, 0xa4, 0x7a, 0x0d, 0x09, 0x19
    ]);
  });
  it("returns the first 32 bytes given a 56-bit key", function() {
    prng.init([0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07]);

    var out = [ ];

    for (var i = 0; i < 32; i++) {
      out.push(prng.next());
    }

    expect(out).toEqual([
      0x29, 0x3f, 0x02, 0xd4, 0x7f, 0x37, 0xc9, 0xb6,
      0x33, 0xf2, 0xaf, 0x52, 0x85, 0xfe, 0xb4, 0x6b,
      0xe6, 0x20, 0xf1, 0x39, 0x0d, 0x19, 0xbd, 0x84,
      0xe2, 0xe0, 0xfd, 0x75, 0x20, 0x31, 0xaf, 0xc1
    ]);
  });
  it("returns the first 32 bytes given a 64-bit key", function() {
    prng.init([0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08]);

    var out = [ ];

    for (var i = 0; i < 32; i++) {
      out.push(prng.next());
    }

    expect(out).toEqual([
      0x97, 0xab, 0x8a, 0x1b, 0xf0, 0xaf, 0xb9, 0x61,
      0x32, 0xf2, 0xf6, 0x72, 0x58, 0xda, 0x15, 0xa8,
      0x82, 0x63, 0xef, 0xdb, 0x45, 0xc4, 0xa1, 0x86,
      0x84, 0xef, 0x87, 0xe6, 0xb1, 0x9e, 0x5b, 0x09
    ]);
  });
  it("returns the first 32 bytes given a 256-bit key", function() {
    prng.init([
      0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
      0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,
      0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
      0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20
    ]);

    var out = [ ];

    for (var i = 0; i < 32; i++) {
      out.push(prng.next());
    }

    expect(out).toEqual([
      0xea, 0xa6, 0xbd, 0x25, 0x88, 0x0b, 0xf9, 0x3d,
      0x3f, 0x5d, 0x1e, 0x4c, 0xa2, 0x61, 0x1d, 0x91,
      0xcf, 0xa4, 0x5c, 0x9f, 0x7e, 0x71, 0x4b, 0x54,
      0xbd, 0xfa, 0x80, 0x02, 0x7c, 0xb1, 0x43, 0x80
    ]);
  });
});